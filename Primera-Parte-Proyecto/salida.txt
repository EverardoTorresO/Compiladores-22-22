Linea: 4. Keyword: class
Linea: 4. ID: Factorial
Linea: 4. Symbol: {
Linea: 5. Keyword: public
Linea: 5. Keyword: static
Linea: 5. Keyword: void
Linea: 5. Keyword: main
Linea: 5. Symbol: (
Linea: 5. Keyword: String
Linea: 5. Symbol: [
Linea: 5. Symbol: ]
Linea: 5. ID: a
Linea: 5. Symbol: )
Linea: 5. Symbol: {
Linea: 6. Keyword: System.out.println
Linea: 6. Symbol: (
Linea: 6. Keyword: new
Linea: 6. ID: Fac
Linea: 6. Symbol: (
Linea: 6. Symbol: )
Linea: 6, Columna: 37. Punto decimal: .
Linea: 6. ID: ComputeFac
Linea: 6. Symbol: (
Linea: 6. NUM: 10
Linea: 6. Symbol: )
Linea: 6. Symbol: )
Linea: 6. Symbol: ;
Linea: 7. Symbol: }
Linea: 8. Symbol: }
Linea: 10. Keyword: class
Linea: 10. ID: Fac
Linea: 10. Symbol: {
Linea: 11. Keyword: public
Linea: 11. Keyword: int
Linea: 11. ID: ComputeFac
Linea: 11. Symbol: (
Linea: 11. Keyword: int
Linea: 11. ID: num
Linea: 11. Symbol: )
Linea: 11. Symbol: {
Linea: 12. Keyword: int
Linea: 12. ID: num_aux
Linea: 12. Symbol: ;
Linea: 14. Keyword: if
Linea: 14. Symbol: (
Linea: 14. ID: num
Linea: 14. Symbol: <
Linea: 14. NUM: 1
Linea: 14. Symbol: )
Linea: 14. ID: num_aux
Linea: 14. Symbol: =
Linea: 14. NUM: 1
Linea: 14. Symbol: ;
Linea: 15. Keyword: else
Linea: 15. ID: num_aux
Linea: 15. Symbol: =
Linea: 15. ID: num
Linea: 15. Symbol: *
Linea: 15. Symbol: (
Linea: 15. Keyword: this
Linea: 15, Columna: 35. Punto decimal: .
Linea: 15. ID: ComputeFac
Linea: 15. Symbol: (
Linea: 15. ID: num
Linea: 15. Symbol: -
Linea: 15. NUM: 1
Linea: 15. Symbol: )
Linea: 15. Symbol: )
Linea: 15. Symbol: ;
Linea: 17. Keyword: return
Linea: 17. ID: num_aux
Linea: 17. Symbol: ;
Linea: 18. Symbol: }
Linea: 19. Symbol: }
Analisis Terminado.
