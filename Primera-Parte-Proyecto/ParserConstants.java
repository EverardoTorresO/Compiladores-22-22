/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 1;
  /** RegularExpression Id. */
  int CHAR = 2;
  /** RegularExpression Id. */
  int PUBLIC = 3;
  /** RegularExpression Id. */
  int STATIC = 4;
  /** RegularExpression Id. */
  int MAIN = 5;
  /** RegularExpression Id. */
  int STRING = 6;
  /** RegularExpression Id. */
  int EXTENDS = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int ELSE = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int INT = 11;
  /** RegularExpression Id. */
  int FLOAT = 12;
  /** RegularExpression Id. */
  int RETURN = 13;
  /** RegularExpression Id. */
  int VOID = 14;
  /** RegularExpression Id. */
  int WHILE = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int THIS = 18;
  /** RegularExpression Id. */
  int NEW = 19;
  /** RegularExpression Id. */
  int SOUT = 20;
  /** RegularExpression Id. */
  int OPSUM = 21;
  /** RegularExpression Id. */
  int OPSUB = 22;
  /** RegularExpression Id. */
  int OPMULTI = 23;
  /** RegularExpression Id. */
  int OPDIV = 24;
  /** RegularExpression Id. */
  int OPMEN = 25;
  /** RegularExpression Id. */
  int OPMENEQ = 26;
  /** RegularExpression Id. */
  int OPMAY = 27;
  /** RegularExpression Id. */
  int OPMAYEQ = 28;
  /** RegularExpression Id. */
  int NOEQ = 29;
  /** RegularExpression Id. */
  int EQUAL = 30;
  /** RegularExpression Id. */
  int EQUIV = 31;
  /** RegularExpression Id. */
  int PUNCOM = 32;
  /** RegularExpression Id. */
  int PUN = 33;
  /** RegularExpression Id. */
  int COM = 34;
  /** RegularExpression Id. */
  int OPARENT = 35;
  /** RegularExpression Id. */
  int CPARENT = 36;
  /** RegularExpression Id. */
  int ORECT = 37;
  /** RegularExpression Id. */
  int CRECT = 38;
  /** RegularExpression Id. */
  int OLLAVE = 39;
  /** RegularExpression Id. */
  int CLLAVE = 40;
  /** RegularExpression Id. */
  int AND = 41;
  /** RegularExpression Id. */
  int OR = 42;
  /** RegularExpression Id. */
  int NOT = 43;
  /** RegularExpression Id. */
  int ID = 44;
  /** RegularExpression Id. */
  int NUMINT = 45;
  /** RegularExpression Id. */
  int NUMFLOTANTE = 46;
  /** RegularExpression Id. */
  int COMENTARIO_LINEA = 57;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int COMENTARIO = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"class\"",
    "\"char\"",
    "\"public\"",
    "\"static\"",
    "\"main\"",
    "\"String\"",
    "\"extends\"",
    "\"boolean\"",
    "\"else\"",
    "\"if\"",
    "\"int\"",
    "\"float\"",
    "\"return\"",
    "\"void\"",
    "\"while\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"System.out.println\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"!=\"",
    "\"=\"",
    "\"==\"",
    "\";\"",
    "\".\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "<ID>",
    "<NUMINT>",
    "<NUMFLOTANTE>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"/*\"",
    "<token of kind 52>",
    "\"*/\"",
    "<token of kind 54>",
    "<token of kind 55>",
    "<token of kind 56>",
    "<COMENTARIO_LINEA>",
  };

}
